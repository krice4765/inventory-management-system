// ÂàÜÁ¥ç„Éá„Éº„ÇøÁ¢∫Ë™ç„Çπ„ÇØ„É™„Éó„Éà
// „Éñ„É©„Ç¶„Ç∂„Ç≥„É≥„ÇΩ„Éº„É´„ÅßÂÆüË°å

console.log('üîç ÂàÜÁ¥ç„Éá„Éº„ÇøÁ¢∫Ë™çÈñãÂßã...');

const checkData = async () => {
  try {
    // PO250920003„ÅÆUUIDÂèñÂæó
    const orderResult = await supabase
      .from('purchase_orders')
      .select('id')
      .eq('order_no', 'PO250920003');

    console.log('üìã Áô∫Ê≥®Êõ∏Ê§úÁ¥¢ÁµêÊûú:', orderResult);

    if (orderResult.data && orderResult.data.length > 0) {
      const orderId = orderResult.data[0].id;
      console.log('üéØ Áô∫Ê≥®Êõ∏ID:', orderId);

      // ÂàÜÁ¥çÂ±•Ê≠¥ÂèñÂæó
      const deliveryResult = await supabase
        .from('transactions')
        .select('id, installment_no, delivery_sequence, total_amount, created_at, memo')
        .eq('parent_order_id', orderId)
        .eq('transaction_type', 'purchase')
        .eq('status', 'confirmed')
        .order('created_at', { ascending: true });

      console.log('üìä ÂàÜÁ¥çÂ±•Ê≠¥:', deliveryResult);

      if (deliveryResult.data) {
        deliveryResult.data.forEach((d, index) => {
          console.log(`Â±•Ê≠¥${index + 1}:`, {
            installment_no: d.installment_no,
            delivery_sequence: d.delivery_sequence,
            memo: d.memo,
            amount: d.total_amount
          });
        });
      }
    }
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error);
  }
};

checkData();