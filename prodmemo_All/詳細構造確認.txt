// 詳細構造とフィールド確認（コンソールで1行ずつ実行）

// 1. 在庫移動テーブルの1件の全フィールドを詳細表示
console.log('在庫移動の全フィールド:', Object.keys(sampleMovement.data[0]));

// 2. 分納履歴の1件の全フィールドを詳細表示
console.log('分納履歴の全フィールド:', Object.keys(transactions.data[0]));

// 3. 在庫移動の詳細データ構造確認
const detailedMovement = todayMovements.data[0];
console.log('在庫移動詳細構造:', detailedMovement);

// 4. 分納履歴の詳細データ構造確認
const detailedTransaction = transactions.data[0];
console.log('分納履歴詳細構造:', detailedTransaction);

// 5. 時系列分析：分納時刻と在庫移動時刻の比較
console.log('=== 時系列分析 ===');
transactions.data.forEach((t, i) => {
  console.log(`分納${i+1}: ${t.created_at} - ¥${t.total_amount}`);
});

todayMovements.data.forEach((m, i) => {
  console.log(`在庫移動${i+1}: ${m.created_at} - ${m.quantity}個 x ¥${m.unit_price}`);
});

// 6. 金額ベースでの関連性確認
const transactionAmounts = transactions.data.map(t => t.total_amount);
const movementAmounts = todayMovements.data.map(m => (m.quantity * m.unit_price));
console.log('分納金額:', transactionAmounts);
console.log('在庫移動金額:', movementAmounts);